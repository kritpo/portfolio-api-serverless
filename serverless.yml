service: portfolio-api-serverless
frameworkVersion: '2'
useDotenv: true
provider:
    name: aws
    runtime: nodejs12.x
    lambdaHashingVersion: 20201221
    region: eu-west-3
    stackName: serverless-portfolio-cloudformation-${env:STAGE}
    environment:
        STAGE: ${env:STAGE}
        DDB_TABLE_NAME: ${env:DDB_TABLE_NAME}
        COGNITO_USER_POOL_ARN: ${env:COGNITO_USER_POOL_ARN}
    apiGateway:
        shouldStartNameWithService: true
    iam:
        role:
            statements:
                - Effect: Allow
                  Action:
                      - dynamodb:GetItem
                      - dynamodb:Query
                      - dynamodb:PutItem
                      - dynamodb:UpdateItem
                      - dynamodb:DeleteItem
                  Resource:
                      - Fn::GetAtt:
                            - DynamoDBTable
                            - Arn
                      - Fn::Join:
                            - '/'
                            - - Fn::GetAtt:
                                    - DynamoDBTable
                                    - Arn
                              - index
                              - GSI
custom:
    domainEnabled:
        prod: true
        other: false
    customDomain:
        domainName: ${env:DOMAIN_NAME}
        stage: ${env:STAGE}
        createRoute53Record: true
        enabled: ${self:custom.domainEnabled.${env:STAGE}, self:custom.domainEnabled.other}

package:
    exclude:
        - '**'
        - '!node_modules/**'
        - '!src/**'
        - src/**/*.test.js

functions:
    - ${file(serverless/services/resumesLanguages.yml)}
    - ${file(serverless/services/resumes.yml)}

resources:
    - ${file(serverless/resources/ddb.yml)}

plugins:
    - serverless-domain-manager
    - serverless-offline

configValidationMode: error
variablesResolutionMode: 20210219
